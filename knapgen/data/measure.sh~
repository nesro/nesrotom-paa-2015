#!/bin/bash
# Tomas Nesrovnal
# nesro@nesro.cz
# https://github.com/nesro/nesrotom-paa-2015

if false; then
	valgrind="valgrind --leak-check=full --track-origins=yes -q"
else
	valgrind=""
fi

MAIN=../../knapsack/main

c() { bc <<< "scale=10;$1" | sed 's/^\./0./'; }

gnuplot_wrapper() {
	input_filename=$1
	output_filename=$2
	xlabel=$3
	ylabel=$4
	nlines=$5
	
	plot="plot \"$input_filename\" using $nlines:1"
	for (( i=2; i<nlines; i++ )); do
		plot+=", \"\" using $nlines:$i"
	done  
	
	gnuplot << __EOF__
		set term pdf
		set output "$output_filename"
		set pointsize 2
		set style data point

		set logscale y

		set key top left reverse Left
		set key autotitle columnhead
		set key title "Legend"
		set key box right width 1 height 1

		set ylabel "$ylabel"
		set xlabel "$xlabel"

		$plot
__EOF__
}



#for m in f0 f25 f50 f75 f100 d1 d2 b0 b1 h1 h2 h3; do
#for m in f0 f10 f25 f50 f75 d1 d2 b0 b1 h1 h2 h3; do


# create right solutions
for i in *.inst.dat; do
  echo $i
  cat $i | $MAIN -b1 >$(echo $i | sed 's/inst/sol/')
done
echo "--------------------------------------------------------- sol created --"

for i in *.inst.dat; do
	echo "time method" > time_$i.plot
	echo "err_max method" > errm_$i.plot
	echo "err_rel method" > errl_$i.plot
done
echo "--------------------------------------------------------- plot reseted --"


for i in *.inst.dat; do
  echo ">>>>> $i <<<<<"
  for m in b1 h1 h2 d1; do
    echo ">>> m=$m <<<"

	  if [[ "$m" == "d1" ]]; then
			r=10
		else
			r=100
		fi
	
	  #echo "paste BEGIN "
	  #paste -d ' ' <(cat $(echo $i | sed 's/inst/sol/') | cut -d ' ' -f 3)
	  #echo "paste END"
	
		r=$(paste -d ' ' <(cat $(echo $i | sed 's/inst/sol/') | cut -d ' ' -f 3) $i | $valgrind $MAIN -p -$m -r $r -e | grep '_')
		
		echo "AAAA $r AAAA"
		
		err_rel=$(echo $r | cut -d_ -f1)
		err_max=$(echo $r | cut -d_ -f2)
		
		# tady jsem si zjistil, ze to mam dobre
		if [[ $m =~ b[01] ]] || [[ $m = d[12] ]] || [[ $m =~ f* ]]; then
			echo "err_max=$err_max"
		fi

		prg_time=$(echo $r | cut -d_ -f3)

		echo "$prg_time $m" >> time_$i.plot	
		echo "$err_max $m" >> errm_$i.plot
		echo "$err_rel $m" >> errl_$i.plot
	done

	#if [[ ! $m =~ b[01] ]] && [[ ! $m =~ d[12] ]] && [[ ! $m == f0 ]]; then
		#gnuplot_wrapper $gpfile_err ./$m.err.pdf "instance size" "relative error" 3
	#fi

	#gnuplot_wrapper $gpfile_time ./$m.time.pdf "time[s]" "instance size" 2
done

